void segmented_efficiency()

{

TFile *f = new TFile("sum_energies.root", "read");
TDirectoryFile *fd = (TDirectoryFile*)f->Get("vdflashmatch"); //I call the directory and then extract from it analysistree
fd->cd(); //move to analysis tree
TTree *t1 = (TTree*)gDirectory->Get("FlashMatchTree");


int nevents1 = t1->GetEntries();
//int nevents3 = t3->GetEntries();
Int_t tEvent1 = 0;
Int_t tEvent3 = 0;
//vector<Float_t> *recox;
Int_t nflashes;
Float_t truex;
Float_t truey;
Float_t truez;
Float_t trueE;
Float_t edep;
Int_t low_limtx = -325;
Int_t high_limx = -225;
Int_t low_limy = -750;
Int_t high_limy = -550;
vector<Color_t> color = {kRed, kBlack, kGreen, kMagenta, kCyan, kBlue, kGray};
// vector<TString> legend = {"[-325, -225] cm", "[-225, -125] cm", "[-125, -25] cm", "[-25, 75] cm", "[75, 175] cm", "[175, 275] cm", "[275, 325] cm"};
vector<TString> legend_labels = {"[-750, -550] cm", "[-550, -350] cm", "[-350, -150] cm", "[-150, 50] cm", "[50, 250] cm", "[250, 450] cm", "[450, 650] cm"};
vector<TEfficiency*> teff;
//no_x;
//no_y;
//no_z;

t1 -> SetBranchAddress("EventID", &tEvent1);
t1 -> SetBranchAddress("TrueX", &truex);
t1 -> SetBranchAddress("TrueY", &truey);
t1 -> SetBranchAddress("TrueZ", &truez);
t1 -> SetBranchAddress("TrueE", &trueE);
t1 -> SetBranchAddress("EdepSimE", &edep);
t1 -> SetBranchAddress("NFlashes", &nflashes);

TH2F* hist2D = new TH2F("hist", "xs", 600, 0, 0, 500, 400, 2200);
TH1F* hist1 = new TH1F("hist1", "Efficiency 5-30 MeV", 25, 0, 0);
TH1F* hist2 = new TH1F("hist2", "Efficiency 5-30 MeV", 25, 0, 0);

for (int j=0; j<color.size(); j++){
	for (int i=0; i<nevents1; i++)
		{
		t1 -> GetEntry(i);
		if (abs(truex) > 325 || abs(truey) > 737){ //|| abs(truez) > 2000){
			continue;
		}
		if (truey > low_limtx && truey < high_limx){ //I move 1m further and further away from the cathode
			if(nflashes != 0 && trueE < 0.03){
				hist1 -> Fill(trueE*1000);
			}
			if (trueE < 0.03){
				hist2 -> Fill(trueE*1000);

				}
			}
		}

		teff.push_back(new TEfficiency(*hist1, *hist2));
		low_limy += 200;
		high_limy += 200;
		if (high_limy > 650){

			high_limy = 650;
		}
}
//cout << sumPEs << endl;
// hist1->GetXaxis()->SetTitle("True energy");
// hist1->SetLineColor(kRed);
TCanvas *c = new TCanvas();
auto legend1 = new TLegend();
for(int k=teff.size()-1; k>=0; k--){
teff[k]->SetTitle("Detector efficiency, y axis cut. TrueE = 4-30 MeV; True energy (MeV); Efficiency");
teff[k]->SetLineColor(color[k]);
legend1->AddEntry(teff[k], legend_labels[k]);
legend1->Draw();
if(k == 6){
teff[k]->Draw();
}
else{

	teff[k]->Draw("SAME");
}


}




}
